{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bonpo\\\\OneDrive\\\\Documents\\\\GitHub\\\\Hackstreet-Boys\\\\my-app\\\\src\\\\pages\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SAMPLE_QUESTIONS = {\n  intro: [{\n    id: 'q1',\n    text: 'What is the correct file extension for C++ source files?',\n    options: ['.c', '.cpp', '.java', '.py'],\n    answer: 1\n  }, {\n    id: 'q2',\n    text: 'Which statement is used to output text to the console in C++?',\n    options: ['print()', 'console.log()', 'std::cout <<', 'System.out.println'],\n    answer: 2\n  }],\n  vars: [{\n    id: 'q1',\n    text: 'Which type is used to represent decimal numbers in C++?',\n    options: ['int', 'double', 'char', 'bool'],\n    answer: 1\n  }]\n};\nexport default function Quiz({\n  quizConfig,\n  onNavigate\n}) {\n  _s();\n  const moduleId = (quizConfig === null || quizConfig === void 0 ? void 0 : quizConfig.moduleId) || 'intro';\n  const title = (quizConfig === null || quizConfig === void 0 ? void 0 : quizConfig.title) || 'Sample Quiz';\n  const questions = SAMPLE_QUESTIONS[moduleId] || SAMPLE_QUESTIONS.intro;\n  const [index, setIndex] = useState(0);\n  const [selected, setSelected] = useState(null);\n  const [score, setScore] = useState(null);\n\n  // --- Code runner state ---\n  const [code, setCode] = useState('// write a simple C++ program, e.g.\\n#include <iostream>\\nint main(){ std::cout << \"Hello, world!\" << std::endl; return 0; }');\n  const [stdin, setStdin] = useState('');\n  const [output, setOutput] = useState('');\n  const [running, setRunning] = useState(false);\n  const [runnerErr, setRunnerErr] = useState(null);\n\n  // Configurable via env vars in your React app:\n  // REACT_APP_JUDGE0_URL - base URL for Judge0 (e.g. https://judge0.example.com)\n  // REACT_APP_JUDGE0_KEY - optional API key header value (if your instance requires it)\n  const JUDGE0_URL = process.env.REACT_APP_JUDGE0_URL || '';\n  const JUDGE0_KEY = process.env.REACT_APP_JUDGE0_KEY || '';\n  useEffect(() => {\n    // clear runner errors when code changes\n    setRunnerErr(null);\n  }, [code, stdin]);\n  const submitAnswer = () => {\n    if (selected === null) return;\n    const correct = questions[index].answer === selected;\n    if (correct) {\n      setScore(s => s === null ? 1 : s + 1);\n    } else {\n      setScore(s => s === null ? 0 : s);\n    }\n    if (index + 1 < questions.length) {\n      setIndex(index + 1);\n      setSelected(null);\n    } else {\n      // finished\n      setIndex(index + 1);\n    }\n  };\n\n  // --- Code runner helpers ---\n  const runCode = async () => {\n    setOutput('');\n    setRunnerErr(null);\n    if (!JUDGE0_URL) {\n      setRunnerErr('No execution endpoint configured. Set REACT_APP_JUDGE0_URL in your environment to a Judge0 instance.');\n      return;\n    }\n    setRunning(true);\n    try {\n      // create submission\n      const body = {\n        source_code: code,\n        stdin: stdin || undefined,\n        // common Judge0 language id for C++ (g++). If your instance differs, change this.\n        language_id: 52\n      };\n      const res = await fetch(`${JUDGE0_URL.replace(/\\/$/, '')}/submissions?base64_encoded=false&wait=false`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(JUDGE0_KEY ? {\n            'X-Auth-Token': JUDGE0_KEY\n          } : {})\n        },\n        body: JSON.stringify(body)\n      });\n      if (!res.ok) throw new Error(`submission failed: ${res.status} ${res.statusText}`);\n      const data = await res.json();\n      const token = data.token || data['token'];\n      if (!token) throw new Error('no token received from execution API');\n\n      // poll for result\n      const start = Date.now();\n      let finished = false;\n      while (!finished && Date.now() - start < 30000) {\n        var _result$status$id, _result$status;\n        // wait\n        // eslint-disable-next-line no-await-in-loop\n        await new Promise(r => setTimeout(r, 800));\n        // eslint-disable-next-line no-await-in-loop\n        const r = await fetch(`${JUDGE0_URL.replace(/\\/$/, '')}/submissions/${token}?base64_encoded=false`, {\n          headers: {\n            ...(JUDGE0_KEY ? {\n              'X-Auth-Token': JUDGE0_KEY\n            } : {})\n          }\n        });\n        if (!r.ok) throw new Error(`result fetch failed: ${r.status} ${r.statusText}`);\n        // eslint-disable-next-line no-await-in-loop\n        const result = await r.json();\n        // status.id: 1 in queue, 2 processing, >=3 finished (depends on Judge0)\n        const statusId = (_result$status$id = (_result$status = result.status) === null || _result$status === void 0 ? void 0 : _result$status.id) !== null && _result$status$id !== void 0 ? _result$status$id : result.status;\n        if (statusId >= 3 || statusId === 0) {\n          finished = true;\n          const parts = [];\n          if (result.stdout) parts.push(result.stdout);\n          if (result.stderr) parts.push('\\n--- stderr ---\\n' + result.stderr);\n          if (result.compile_output) parts.push('\\n--- compile ---\\n' + result.compile_output);\n          if (parts.length === 0) parts.push('(no output)');\n          setOutput(parts.join('\\n'));\n          break;\n        }\n      }\n      if (!finished) {\n        setRunnerErr('Execution timed out (30s).');\n      }\n    } catch (err) {\n      setRunnerErr(String(err));\n    } finally {\n      setRunning(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"page page-quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), index < questions.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question\",\n        children: questions[index].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"options\",\n        children: questions[index].options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `option ${selected === i ? 'selected' : ''}`,\n          onClick: () => setSelected(i),\n          children: opt\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: submitAnswer,\n          disabled: selected === null,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-link\",\n          onClick: () => onNavigate('modules'),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Quiz finished!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score: \", score, \"/\", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => {\n            setIndex(0);\n            setSelected(null);\n            setScore(null);\n          },\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline\",\n          onClick: () => onNavigate('modules'),\n          children: \"Back to modules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-runner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Code Runner (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), !JUDGE0_URL && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"muted\",\n        children: [\"No execution endpoint configured. To enable running code, set \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"REACT_APP_JUDGE0_URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 94\n        }, this), \" (and optionally \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"REACT_APP_JUDGE0_KEY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 144\n        }, this), \") in your environment.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Source (C++)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: code,\n          onChange: e => setCode(e.target.value),\n          rows: 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stdin-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Input (stdin)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: stdin,\n          onChange: e => setStdin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: runCode,\n          disabled: running || !JUDGE0_URL,\n          children: running ? 'Running...' : 'Run'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-link\",\n          onClick: () => {\n            setCode('');\n            setOutput('');\n            setRunnerErr(null);\n          },\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"output-box\",\n          children: runnerErr ? `Error: ${runnerErr}` : output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"z4006tQRTqHrufsWTOFJuQmJ9h8=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SAMPLE_QUESTIONS","intro","id","text","options","answer","vars","Quiz","quizConfig","onNavigate","_s","moduleId","title","questions","index","setIndex","selected","setSelected","score","setScore","code","setCode","stdin","setStdin","output","setOutput","running","setRunning","runnerErr","setRunnerErr","JUDGE0_URL","process","env","REACT_APP_JUDGE0_URL","JUDGE0_KEY","REACT_APP_JUDGE0_KEY","submitAnswer","correct","s","length","runCode","body","source_code","undefined","language_id","res","fetch","replace","method","headers","JSON","stringify","ok","Error","status","statusText","data","json","token","start","Date","now","finished","_result$status$id","_result$status","Promise","r","setTimeout","result","statusId","parts","stdout","push","stderr","compile_output","join","err","String","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","i","onClick","disabled","value","onChange","e","target","rows","_c","$RefreshReg$"],"sources":["C:/Users/bonpo/OneDrive/Documents/GitHub/Hackstreet-Boys/my-app/src/pages/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SAMPLE_QUESTIONS = {\r\n  intro: [\r\n    {\r\n      id: 'q1',\r\n      text: 'What is the correct file extension for C++ source files?',\r\n      options: ['.c', '.cpp', '.java', '.py'],\r\n      answer: 1,\r\n    },\r\n    {\r\n      id: 'q2',\r\n      text: 'Which statement is used to output text to the console in C++?',\r\n      options: ['print()', 'console.log()', 'std::cout <<', 'System.out.println'],\r\n      answer: 2,\r\n    },\r\n  ],\r\n  vars: [\r\n    {\r\n      id: 'q1',\r\n      text: 'Which type is used to represent decimal numbers in C++?',\r\n      options: ['int', 'double', 'char', 'bool'],\r\n      answer: 1,\r\n    },\r\n  ],\r\n};\r\n\r\nexport default function Quiz({ quizConfig, onNavigate }) {\r\n  const moduleId = quizConfig?.moduleId || 'intro';\r\n  const title = quizConfig?.title || 'Sample Quiz';\r\n  const questions = SAMPLE_QUESTIONS[moduleId] || SAMPLE_QUESTIONS.intro;\r\n\r\n  const [index, setIndex] = useState(0);\r\n  const [selected, setSelected] = useState(null);\r\n  const [score, setScore] = useState(null);\r\n\r\n  // --- Code runner state ---\r\n  const [code, setCode] = useState('// write a simple C++ program, e.g.\\n#include <iostream>\\nint main(){ std::cout << \"Hello, world!\" << std::endl; return 0; }');\r\n  const [stdin, setStdin] = useState('');\r\n  const [output, setOutput] = useState('');\r\n  const [running, setRunning] = useState(false);\r\n  const [runnerErr, setRunnerErr] = useState(null);\r\n\r\n  // Configurable via env vars in your React app:\r\n  // REACT_APP_JUDGE0_URL - base URL for Judge0 (e.g. https://judge0.example.com)\r\n  // REACT_APP_JUDGE0_KEY - optional API key header value (if your instance requires it)\r\n  const JUDGE0_URL = process.env.REACT_APP_JUDGE0_URL || '';\r\n  const JUDGE0_KEY = process.env.REACT_APP_JUDGE0_KEY || '';\r\n\r\n  useEffect(() => {\r\n    // clear runner errors when code changes\r\n    setRunnerErr(null);\r\n  }, [code, stdin]);\r\n\r\n  const submitAnswer = () => {\r\n    if (selected === null) return;\r\n    const correct = questions[index].answer === selected;\r\n    if (correct) {\r\n      setScore((s) => (s === null ? 1 : s + 1));\r\n    } else {\r\n      setScore((s) => (s === null ? 0 : s));\r\n    }\r\n\r\n    if (index + 1 < questions.length) {\r\n      setIndex(index + 1);\r\n      setSelected(null);\r\n    } else {\r\n      // finished\r\n      setIndex(index + 1);\r\n    }\r\n  };\r\n\r\n  // --- Code runner helpers ---\r\n  const runCode = async () => {\r\n    setOutput('');\r\n    setRunnerErr(null);\r\n\r\n    if (!JUDGE0_URL) {\r\n      setRunnerErr('No execution endpoint configured. Set REACT_APP_JUDGE0_URL in your environment to a Judge0 instance.');\r\n      return;\r\n    }\r\n\r\n    setRunning(true);\r\n\r\n    try {\r\n      // create submission\r\n      const body = {\r\n        source_code: code,\r\n        stdin: stdin || undefined,\r\n        // common Judge0 language id for C++ (g++). If your instance differs, change this.\r\n        language_id: 52,\r\n      };\r\n\r\n      const res = await fetch(`${JUDGE0_URL.replace(/\\/$/, '')}/submissions?base64_encoded=false&wait=false`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...(JUDGE0_KEY ? { 'X-Auth-Token': JUDGE0_KEY } : {}),\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      if (!res.ok) throw new Error(`submission failed: ${res.status} ${res.statusText}`);\r\n      const data = await res.json();\r\n      const token = data.token || data['token'];\r\n      if (!token) throw new Error('no token received from execution API');\r\n\r\n      // poll for result\r\n      const start = Date.now();\r\n      let finished = false;\r\n      while (!finished && Date.now() - start < 30000) {\r\n        // wait\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await new Promise((r) => setTimeout(r, 800));\r\n        // eslint-disable-next-line no-await-in-loop\r\n        const r = await fetch(`${JUDGE0_URL.replace(/\\/$/, '')}/submissions/${token}?base64_encoded=false`, {\r\n          headers: {\r\n            ...(JUDGE0_KEY ? { 'X-Auth-Token': JUDGE0_KEY } : {}),\r\n          },\r\n        });\r\n        if (!r.ok) throw new Error(`result fetch failed: ${r.status} ${r.statusText}`);\r\n        // eslint-disable-next-line no-await-in-loop\r\n        const result = await r.json();\r\n        // status.id: 1 in queue, 2 processing, >=3 finished (depends on Judge0)\r\n        const statusId = result.status?.id ?? result.status;\r\n        if (statusId >= 3 || statusId === 0) {\r\n          finished = true;\r\n          const parts = [];\r\n          if (result.stdout) parts.push(result.stdout);\r\n          if (result.stderr) parts.push('\\n--- stderr ---\\n' + result.stderr);\r\n          if (result.compile_output) parts.push('\\n--- compile ---\\n' + result.compile_output);\r\n          if (parts.length === 0) parts.push('(no output)');\r\n          setOutput(parts.join('\\n'));\r\n          break;\r\n        }\r\n      }\r\n      if (!finished) {\r\n        setRunnerErr('Execution timed out (30s).');\r\n      }\r\n    } catch (err) {\r\n      setRunnerErr(String(err));\r\n    } finally {\r\n      setRunning(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"page page-quiz\">\r\n      <h2>{title}</h2>\r\n\r\n      {index < questions.length ? (\r\n        <div className=\"quiz-card\">\r\n          <p className=\"question\">{questions[index].text}</p>\r\n\r\n          <ul className=\"options\">\r\n            {questions[index].options.map((opt, i) => (\r\n              <li key={i} className={`option ${selected === i ? 'selected' : ''}`} onClick={() => setSelected(i)}>\r\n                {opt}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <div className=\"form-actions\">\r\n            <button className=\"btn\" onClick={submitAnswer} disabled={selected === null}>Submit</button>\r\n            <button className=\"btn btn-link\" onClick={() => onNavigate('modules')}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"quiz-result\">\r\n          <p>Quiz finished!</p>\r\n          <p>Your score: {score}/{questions.length}</p>\r\n          <div className=\"form-actions\">\r\n            <button className=\"btn\" onClick={() => { setIndex(0); setSelected(null); setScore(null); }}>Retry</button>\r\n            <button className=\"btn btn-outline\" onClick={() => onNavigate('modules')}>Back to modules</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Code runner panel - optional, powered by Judge0 (configure REACT_APP_JUDGE0_URL) */}\r\n      <div className=\"code-runner\">\r\n        <h3>Code Runner (optional)</h3>\r\n        {!JUDGE0_URL && (\r\n          <p className=\"muted\">No execution endpoint configured. To enable running code, set <code>REACT_APP_JUDGE0_URL</code> (and optionally <code>REACT_APP_JUDGE0_KEY</code>) in your environment.</p>\r\n        )}\r\n\r\n        <div className=\"code-area\">\r\n          <label>Source (C++)</label>\r\n          <textarea value={code} onChange={(e) => setCode(e.target.value)} rows={8} />\r\n        </div>\r\n\r\n        <div className=\"stdin-area\">\r\n          <label>Input (stdin)</label>\r\n          <input value={stdin} onChange={(e) => setStdin(e.target.value)} />\r\n        </div>\r\n\r\n        <div className=\"form-actions\">\r\n          <button className=\"btn\" onClick={runCode} disabled={running || !JUDGE0_URL}>{running ? 'Running...' : 'Run'}</button>\r\n          <button className=\"btn btn-link\" onClick={() => { setCode(''); setOutput(''); setRunnerErr(null); }}>Clear</button>\r\n        </div>\r\n\r\n        <div className=\"output-area\">\r\n          <label>Output</label>\r\n          <pre className=\"output-box\">{runnerErr ? `Error: ${runnerErr}` : output}</pre>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}